diff --git a/src/iv/imageviewer.cpp b/src/iv/imageviewer.cpp
index c6cbeda..6dd9492 100644
--- a/src/iv/imageviewer.cpp
+++ b/src/iv/imageviewer.cpp
@@ -1337,8 +1337,8 @@ ImageViewer::slideNoLoop ()
 static bool
 compName (IvImage *first, IvImage *second)
 {
-    std::string firstFile = boost::filesystem::path(first->name()).leaf();
-    std::string secondFile = boost::filesystem::path(second->name()).leaf();
+    std::string firstFile = boost::filesystem::path(first->name()).leaf().string();
+    std::string secondFile = boost::filesystem::path(second->name()).leaf().string();
     return (firstFile.compare(secondFile) < 0);
 }
 
diff --git a/src/libOpenImageIO/imageioplugin.cpp b/src/libOpenImageIO/imageioplugin.cpp
index 4d6d812..9530151 100644
--- a/src/libOpenImageIO/imageioplugin.cpp
+++ b/src/libOpenImageIO/imageioplugin.cpp
@@ -267,7 +267,7 @@ catalog_all_plugins (std::string searchpath)
         for (boost::filesystem::directory_iterator itr (dir);
               itr != end_itr;  ++itr) {
             std::string full_filename = itr->path().string();
-            std::string leaf = itr->path().leaf();
+            std::string leaf = itr->path().leaf().string();
 //            std::cerr << "\tfound file " << full_filename << ", leaf = '" << leaf << "'\n";
             size_t found = leaf.find (pattern);
             if (found != std::string::npos &&
diff --git a/src/libtexture/imagecache.cpp b/src/libtexture/imagecache.cpp
index 2f724a5..efc7a0f 100644
--- a/src/libtexture/imagecache.cpp
+++ b/src/libtexture/imagecache.cpp
@@ -1596,12 +1596,12 @@ ImageCacheImpl::getattribute (const std::string &name, TypeDesc type,
         *(int *)val = (int)m_failure_retries;
         return true;
     }
-    if (name == "worldtocommon" && (type == TypeDesc::PT_MATRIX ||
+    if (name == "worldtocommon" && (type == PT_MATRIX ||
                                     type == TypeDesc(TypeDesc::FLOAT,16))) {
         *(Imath::M44f *)val = m_Mw2c;
         return true;
     }
-    if (name == "commontoworld" && (type == TypeDesc::PT_MATRIX ||
+    if (name == "commontoworld" && (type == PT_MATRIX ||
                                     type == TypeDesc(TypeDesc::FLOAT,16))) {
         *(Imath::M44f *)val = m_Mc2w;
         return true;
diff --git a/src/libtexture/texturesys.cpp b/src/libtexture/texturesys.cpp
index 64d1dc3..8f43212 100644
--- a/src/libtexture/texturesys.cpp
+++ b/src/libtexture/texturesys.cpp
@@ -295,13 +295,13 @@ bool
 TextureSystemImpl::attribute (const std::string &name, TypeDesc type,
                               const void *val)
 {
-    if (name == "worldtocommon" && (type == TypeDesc::PT_MATRIX ||
+    if (name == "worldtocommon" && (type == PT_MATRIX ||
                                     type == TypeDesc(TypeDesc::FLOAT,16))) {
         m_Mw2c = *(const Imath::M44f *)val;
         m_Mc2w = m_Mw2c.inverse();
         return true;
     }
-    if (name == "commontoworld" && (type == TypeDesc::PT_MATRIX ||
+    if (name == "commontoworld" && (type == PT_MATRIX ||
                                     type == TypeDesc(TypeDesc::FLOAT,16))) {
         m_Mc2w = *(const Imath::M44f *)val;
         m_Mw2c = m_Mc2w.inverse();
@@ -322,12 +322,12 @@ bool
 TextureSystemImpl::getattribute (const std::string &name, TypeDesc type,
                                  void *val)
 {
-    if (name == "worldtocommon" && (type == TypeDesc::PT_MATRIX ||
+    if (name == "worldtocommon" && (type == PT_MATRIX ||
                                     type == TypeDesc(TypeDesc::FLOAT,16))) {
         *(Imath::M44f *)val = m_Mw2c;
         return true;
     }
-    if (name == "commontoworld" && (type == TypeDesc::PT_MATRIX ||
+    if (name == "commontoworld" && (type == PT_MATRIX ||
                                     type == TypeDesc(TypeDesc::FLOAT,16))) {
         *(Imath::M44f *)val = m_Mc2w;
         return true;
diff --git a/src/openexr.imageio/exroutput.cpp b/src/openexr.imageio/exroutput.cpp
index 10c8913..8aa5a04 100644
--- a/src/openexr.imageio/exroutput.cpp
+++ b/src/openexr.imageio/exroutput.cpp
@@ -453,7 +453,7 @@ OpenEXROutput::put_parameter (const std::string &name, TypeDesc type,
         m_header->insert (xname.c_str(), Imf::StringAttribute (*(char**)data));
         return true;
     }
-    if (type == TypeDesc::PT_VECTOR) {
+    if (type == PT_VECTOR) {
         m_header->insert (xname.c_str(), Imf::V3fAttribute (*(Imath::V3f*)data));
         return true;
     }
diff --git a/src/tiff.imageio/tiffinput.cpp b/src/tiff.imageio/tiffinput.cpp
index 388f997..cae0db7 100644
--- a/src/tiff.imageio/tiffinput.cpp
+++ b/src/tiff.imageio/tiffinput.cpp
@@ -143,7 +143,7 @@ private:
     void get_matrix_attribute (const std::string &name, int tag) {
         float *f = NULL;
         if (safe_tiffgetfield (name, tag, &f) && f)
-            m_spec.attribute (name, TypeDesc::PT_MATRIX, f);
+            m_spec.attribute (name, PT_MATRIX, f);
     }
 
     // Get a float tiff tag field and put it into extra_params
